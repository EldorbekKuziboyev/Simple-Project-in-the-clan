import asyncio
from celery import shared_task
from django.db import transaction
from movies.models import Movie
from aiogram import Bot
from aiogram.types import FSInputFile

# –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
TOKEN = "7593798870:AAHKBUn8cKC8VaGQaanLbmRp2HVZB8UVbv4"
CHAT_ID = -1002359210651

bot = Bot(token=TOKEN)

async def send_video(video_path, caption):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –≤ Telegram"""
    video = FSInputFile(video_path)
    return await bot.send_video(chat_id=CHAT_ID, video=video, caption=caption or "üé¨ –ù–æ–≤—ã–π —Ñ–∏–ª—å–º!")

@shared_task(bind=True, max_retries=None)
def send_movie_to_channel(self, movie_id):
    """Celery-–∑–∞–¥–∞—á–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–ª—å–º–∞ –≤ Telegram"""
    try:
        movie = Movie.objects.get(id=movie_id)
        if not movie.video_file:
            print("‚ö†Ô∏è –ù–µ—Ç –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
            return

        video_path = movie.video_file.path
        caption = f"üé¨ {movie.title}" if movie.title else "üé¨ –ù–æ–≤—ã–π —Ñ–∏–ª—å–º!"

        # –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –Ω–æ–≤–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        message = asyncio.run(send_video(video_path, caption))

        if message and message.video:
            with transaction.atomic():
                movie.file_id = message.video.file_id
                movie.save()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")
        self.retry(exc=e, countdown=10)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥
